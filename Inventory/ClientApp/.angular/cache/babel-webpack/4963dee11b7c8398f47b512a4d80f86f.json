{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"../product.service\";\nimport * as i2 from \"../user.service\";\nimport * as i3 from \"../orders.service\";\nimport * as i4 from \"../location.service\";\nimport * as i5 from \"@angular/common\";\nimport * as i6 from \"@angular/forms\";\n\nfunction UserOrdersComponent_p_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"p\", 7);\n    i0.ɵɵtext(1, \" Your login information is incorrect. Please try again. \");\n    i0.ɵɵelement(2, \"br\");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction UserOrdersComponent_p_2_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r12 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"p\");\n    i0.ɵɵelementStart(1, \"input\", 8);\n    i0.ɵɵlistener(\"ngModelChange\", function UserOrdersComponent_p_2_Template_input_ngModelChange_1_listener($event) {\n      i0.ɵɵrestoreView(_r12);\n      const ctx_r11 = i0.ɵɵnextContext();\n      return ctx_r11.userService.email = $event;\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(2, \"button\", 9);\n    i0.ɵɵlistener(\"click\", function UserOrdersComponent_p_2_Template_button_click_2_listener() {\n      i0.ɵɵrestoreView(_r12);\n      const ctx_r13 = i0.ɵɵnextContext();\n      return ctx_r13.userService.login(ctx_r13.userService.email);\n    });\n    i0.ɵɵtext(3, \"Login\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(4, \"br\");\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngModel\", ctx_r1.userService.email);\n  }\n}\n\nfunction UserOrdersComponent_ng_template_3_span_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\");\n    i0.ɵɵtext(1, \" Orders placed by you: \");\n    i0.ɵɵelement(2, \"br\");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction UserOrdersComponent_ng_template_3_span_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\");\n    i0.ɵɵtext(1);\n    i0.ɵɵpipe(2, \"date\");\n    i0.ɵɵelement(3, \"br\");\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const order_r16 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate5(\" Order ID: \", order_r16.orderId, \" | Quantity ordered: \", order_r16.quantity, \" | Ordered on: \", i0.ɵɵpipeBind2(2, 5, order_r16.orderDate, \"dd/MM/yyyy\"), \" | Ordered for: \", order_r16.locationId, \" | Ordered from: \", order_r16.supplier, \" \");\n  }\n}\n\nfunction UserOrdersComponent_ng_template_3_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r18 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"p\");\n    i0.ɵɵtext(1);\n    i0.ɵɵelementStart(2, \"button\", 9);\n    i0.ɵɵlistener(\"click\", function UserOrdersComponent_ng_template_3_Template_button_click_2_listener() {\n      i0.ɵɵrestoreView(_r18);\n      const ctx_r17 = i0.ɵɵnextContext();\n      return ctx_r17.userService.logout();\n    });\n    i0.ɵɵtext(3, \"Logout\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(4, \"br\");\n    i0.ɵɵtemplate(5, UserOrdersComponent_ng_template_3_span_5_Template, 3, 0, \"span\", 10);\n    i0.ɵɵtemplate(6, UserOrdersComponent_ng_template_3_span_6_Template, 4, 8, \"span\", 11);\n    i0.ɵɵelement(7, \"br\");\n  }\n\n  if (rf & 2) {\n    const ctx_r3 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" Logged in as: \", ctx_r3.userService.loggedInUser.firstName, \" \");\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"ngIf\", ctx_r3.userOrders !== undefined);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r3.userOrders);\n  }\n}\n\nfunction UserOrdersComponent_span_5_span_12_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\");\n    i0.ɵɵtext(1, \" Quantity ordered must be at least one. \");\n    i0.ɵɵelement(2, \"br\");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction UserOrdersComponent_span_5_span_16_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\");\n    i0.ɵɵelement(1, \"br\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r20 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\" Total retail value ordered: \", ctx_r20.floor(ctx_r20.amountOrdered * ctx_r20.item.price.regular), \" \");\n  }\n}\n\nfunction UserOrdersComponent_span_5_span_18_section_1_span_7_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\");\n    i0.ɵɵtext(1, \" Quantity ordered must be at least one. \");\n    i0.ɵɵelement(2, \"br\");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction UserOrdersComponent_span_5_span_18_section_1_span_8_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\");\n    i0.ɵɵtext(1, \" Transfer order was not submitted, this would cause the other chain to become low-stocked. \");\n    i0.ɵɵelement(2, \"br\");\n    i0.ɵɵelementEnd();\n  }\n}\n\nconst _c0 = function () {\n  return {\n    standalone: true\n  };\n};\n\nfunction UserOrdersComponent_span_5_span_18_section_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r27 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"section\");\n    i0.ɵɵtext(1);\n    i0.ɵɵelement(2, \"br\");\n    i0.ɵɵtext(3);\n    i0.ɵɵelement(4, \"br\");\n    i0.ɵɵtext(5);\n    i0.ɵɵelement(6, \"br\");\n    i0.ɵɵtemplate(7, UserOrdersComponent_span_5_span_18_section_1_span_7_Template, 3, 0, \"span\", 10);\n    i0.ɵɵtemplate(8, UserOrdersComponent_span_5_span_18_section_1_span_8_Template, 3, 0, \"span\", 10);\n    i0.ɵɵelementStart(9, \"form\", 12);\n    i0.ɵɵlistener(\"ngSubmit\", function UserOrdersComponent_span_5_span_18_section_1_Template_form_ngSubmit_9_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r27);\n      const productInv_r23 = restoredCtx.$implicit;\n      const ctx_r26 = i0.ɵɵnextContext(3);\n      return ctx_r26.transferProduct(productInv_r23);\n    });\n    i0.ɵɵelementStart(10, \"input\", 13);\n    i0.ɵɵlistener(\"ngModelChange\", function UserOrdersComponent_span_5_span_18_section_1_Template_input_ngModelChange_10_listener($event) {\n      i0.ɵɵrestoreView(_r27);\n      const ctx_r28 = i0.ɵɵnextContext(3);\n      return ctx_r28.amountTransferred = $event;\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(11, \"input\", 14);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const productInv_r23 = ctx.$implicit;\n    const ctx_r22 = i0.ɵɵnextContext(3);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" Location ID: \", productInv_r23.locationID, \" \");\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\" Current quantity: \", productInv_r23.onHand, \" \");\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\" Sales in past week: \", productInv_r23.sales, \" \");\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", ctx_r22.badTransferQuantity);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r22.badTransfer);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngModel\", ctx_r22.amountTransferred)(\"ngModelOptions\", i0.ɵɵpureFunction0(7, _c0));\n  }\n}\n\nfunction UserOrdersComponent_span_5_span_18_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\");\n    i0.ɵɵtemplate(1, UserOrdersComponent_span_5_span_18_section_1_Template, 12, 8, \"section\", 11);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r21 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r21.searchedProductInv);\n  }\n}\n\nfunction UserOrdersComponent_span_5_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r30 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"span\");\n    i0.ɵɵtext(1);\n    i0.ɵɵelement(2, \"br\");\n    i0.ɵɵtext(3);\n    i0.ɵɵpipe(4, \"currency\");\n    i0.ɵɵelement(5, \"br\");\n    i0.ɵɵtext(6);\n    i0.ɵɵelement(7, \"br\");\n    i0.ɵɵtext(8);\n    i0.ɵɵelement(9, \"br\");\n    i0.ɵɵtext(10);\n    i0.ɵɵelement(11, \"br\");\n    i0.ɵɵtemplate(12, UserOrdersComponent_span_5_span_12_Template, 3, 0, \"span\", 10);\n    i0.ɵɵelementStart(13, \"form\", 12);\n    i0.ɵɵlistener(\"ngSubmit\", function UserOrdersComponent_span_5_Template_form_ngSubmit_13_listener() {\n      i0.ɵɵrestoreView(_r30);\n      const ctx_r29 = i0.ɵɵnextContext();\n      return ctx_r29.orderProduct();\n    });\n    i0.ɵɵelementStart(14, \"input\", 13);\n    i0.ɵɵlistener(\"ngModelChange\", function UserOrdersComponent_span_5_Template_input_ngModelChange_14_listener($event) {\n      i0.ɵɵrestoreView(_r30);\n      const ctx_r31 = i0.ɵɵnextContext();\n      return ctx_r31.amountOrdered = $event;\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(15, \"input\", 14);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(16, UserOrdersComponent_span_5_span_16_Template, 3, 1, \"span\", 10);\n    i0.ɵɵelement(17, \"br\");\n    i0.ɵɵtemplate(18, UserOrdersComponent_span_5_span_18_Template, 2, 1, \"span\", 1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r4 = i0.ɵɵnextContext();\n\n    const _r5 = i0.ɵɵreference(7);\n\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" Item name: \", ctx_r4.item.inventory.productName, \" \");\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\" Regular price: \", i0.ɵɵpipeBind2(4, 11, ctx_r4.item.price.regular, \"USD\"), \" \");\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate1(\" Supplier: \", ctx_r4.item.soldBy, \" \");\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\" Current quantity: \", ctx_r4.item.inventory.onHand, \" \");\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\" Sales in past week: \", ctx_r4.item.inventory.sales, \" \");\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", ctx_r4.badQuantity);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngModel\", ctx_r4.amountOrdered)(\"ngModelOptions\", i0.ɵɵpureFunction0(14, _c0));\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", ctx_r4.amountOrdered !== undefined);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", ctx_r4.searchedProductInv.length > 0)(\"ngIfElse\", _r5);\n  }\n}\n\nfunction UserOrdersComponent_ng_template_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtext(0, \" No items were found in other chains that could be transferred. \");\n    i0.ɵɵelement(1, \"br\");\n    i0.ɵɵtext(2, \" Try searching other stores with similar search parameters to populate DB and then come back.\\n\");\n  }\n}\n\nfunction UserOrdersComponent_ng_template_8_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"p\");\n    i0.ɵɵtext(1, \" You must login to order a product. \");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction UserOrdersComponent_ng_template_10_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"p\");\n    i0.ɵɵtext(1, \" There is no item to display here. \");\n    i0.ɵɵelementEnd();\n  }\n}\n\nexport let UserOrdersComponent = /*#__PURE__*/(() => {\n  class UserOrdersComponent {\n    constructor(productService, userService, orderService, locationService) {\n      this.productService = productService;\n      this.userService = userService;\n      this.orderService = orderService;\n      this.locationService = locationService;\n      this.item = this.productService.item;\n      this.badQuantity = false;\n      this.badTransfer = false;\n      this.badTransferQuantity = false;\n      this.searchedProductInv = [];\n      this.userOrders = [];\n    }\n\n    transferProduct(fromItem) {\n      this.badTransfer = false;\n      this.badTransferQuantity = false;\n      let newOrder = {\n        orderId: undefined,\n        userId: this.userService.loggedInUser.id,\n        quantity: this.amountTransferred,\n        orderDate: new Date(),\n        locationId: this.locationService.location.data.locationId,\n        supplier: fromItem.locationID\n      }; // These ifs are to check if the input is valid.\n\n      if (newOrder.quantity <= 0 || newOrder.quantity === undefined) this.badTransferQuantity = true; // Checks if making the transfer would cause the other chain to go low-stocked, we dont want those orders to occur, but it could be changed.\n\n      if (fromItem.onHand - this.amountTransferred <= fromItem.sales) this.badTransfer = true;\n      if (this.badTransferQuantity || this.badTransfer) return; // This kicks us out of the method and will display some error text on the page describing what's wrong to the user.\n\n      this.orderService.createOrder(newOrder).subscribe(() => {\n        this.getUserOrders();\n      });\n      this.item.inventory.onHand += this.amountTransferred; // updates our amount ordered from the other facility and adds it to currrent stock.\n\n      this.productService.updateProductInv(this.item.inventory.id, this.item.inventory).subscribe(); // updates current facility's stock.\n\n      fromItem.onHand -= this.amountTransferred; // subtracts our amount ordered from the transferring facility's current stock.\n\n      this.productService.updateProductInv(fromItem.id, fromItem).subscribe(); // updates current sending facility's stock.\n\n      let blankAmount;\n      this.amountTransferred = blankAmount; // Used to set the text in the input box to be blank so the placeholder text is shown again.\n    }\n\n    orderProduct() {\n      this.badQuantity = false;\n      let newOrder = {\n        orderId: undefined,\n        userId: this.userService.loggedInUser.id,\n        quantity: this.amountOrdered,\n        orderDate: new Date(),\n        locationId: this.locationService.location.data.locationId,\n        supplier: this.item.soldBy\n      };\n\n      if (newOrder.quantity <= 0 || newOrder.quantity === undefined) {\n        // Check if there's data in the order and that it's above 0.\n        this.badQuantity = true;\n        return;\n      }\n\n      this.orderService.createOrder(newOrder).subscribe(() => {\n        this.getUserOrders();\n      });\n      this.item.inventory.onHand += this.amountOrdered;\n      this.productService.updateProductInv(this.item.inventory.id, this.item.inventory).subscribe();\n      let blankAmount;\n      this.amountOrdered = blankAmount;\n    } // Takes the productInvArray from ProductService and searches for all those matching current itemId, but has a differing locationID.\n    // This is to know what facilities can transfer items over\n\n\n    searchProductInv() {\n      this.searchedProductInv = this.productService.productInvArray.filter(productInv => productInv.itemId === this.item.inventory.itemId && productInv.locationID !== this.item.inventory.locationID);\n    }\n\n    floor(toFloor) {\n      return Math.floor(toFloor * 100) / 100;\n    }\n\n    getUserOrders() {\n      this.orderService.getOrdersByUserId(this.userService.loggedInUser.id).subscribe(response => {\n        this.userOrders = response;\n      });\n    }\n\n    ngOnInit() {\n      this.searchProductInv(); // gets us productInvArray that has matching itemId and differing locationID.\n\n      this.getUserOrders();\n    }\n\n  }\n\n  UserOrdersComponent.ɵfac = function UserOrdersComponent_Factory(t) {\n    return new (t || UserOrdersComponent)(i0.ɵɵdirectiveInject(i1.ProductService), i0.ɵɵdirectiveInject(i2.UserService), i0.ɵɵdirectiveInject(i3.OrdersService), i0.ɵɵdirectiveInject(i4.LocationService));\n  };\n\n  UserOrdersComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: UserOrdersComponent,\n    selectors: [[\"app-user-orders\"]],\n    decls: 12,\n    vars: 5,\n    consts: [[\"style\", \"color: red;\", 4, \"ngIf\"], [4, \"ngIf\", \"ngIfElse\"], [\"loggedIn\", \"\"], [\"noItemsCanBeTransferred\", \"\"], [\"style\", \"color: red;\"], [\"notLoggedIn\", \"\"], [\"noItem\", \"\"], [2, \"color\", \"red\"], [\"type\", \"text\", \"maxlength\", \"255\", \"placeholder\", \"Email\", 3, \"ngModel\", \"ngModelChange\"], [3, \"click\"], [4, \"ngIf\"], [4, \"ngFor\", \"ngForOf\"], [3, \"ngSubmit\"], [\"type\", \"number\", \"placeholder\", \"Amount to order\", 3, \"ngModel\", \"ngModelOptions\", \"ngModelChange\"], [\"type\", \"submit\", \"value\", \"Order\"]],\n    template: function UserOrdersComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\");\n        i0.ɵɵtemplate(1, UserOrdersComponent_p_1_Template, 3, 0, \"p\", 0);\n        i0.ɵɵtemplate(2, UserOrdersComponent_p_2_Template, 5, 1, \"p\", 1);\n        i0.ɵɵtemplate(3, UserOrdersComponent_ng_template_3_Template, 8, 3, \"ng-template\", null, 2, i0.ɵɵtemplateRefExtractor);\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(5, UserOrdersComponent_span_5_Template, 19, 15, \"span\", 1);\n        i0.ɵɵtemplate(6, UserOrdersComponent_ng_template_6_Template, 3, 0, \"ng-template\", null, 3, i0.ɵɵtemplateRefExtractor);\n        i0.ɵɵtemplate(8, UserOrdersComponent_ng_template_8_Template, 2, 0, \"ng-template\", 4, 5, i0.ɵɵtemplateRefExtractor);\n        i0.ɵɵtemplate(10, UserOrdersComponent_ng_template_10_Template, 2, 0, \"ng-template\", 4, 6, i0.ɵɵtemplateRefExtractor);\n      }\n\n      if (rf & 2) {\n        const _r2 = i0.ɵɵreference(4);\n\n        const _r7 = i0.ɵɵreference(9);\n\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.userService.badLogin);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.userService.loggedInUser === undefined)(\"ngIfElse\", _r2);\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"ngIf\", ctx.userService.loggedInUser !== undefined)(\"ngIfElse\", _r7);\n      }\n    },\n    directives: [i5.NgIf, i6.DefaultValueAccessor, i6.MaxLengthValidator, i6.NgControlStatus, i6.NgModel, i5.NgForOf, i6.ɵNgNoValidate, i6.NgControlStatusGroup, i6.NgForm, i6.NumberValueAccessor],\n    pipes: [i5.DatePipe, i5.CurrencyPipe],\n    styles: [\"\"]\n  });\n  return UserOrdersComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}